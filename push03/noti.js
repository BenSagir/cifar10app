/* eslint-disable prettier/prettier */
import React from 'react';
import PushNotification from 'react-native-push-notification';

function createNotification(timeToNotifi, message) {
    PushNotification.localNotificationSchedule({
        date: timeToNotifi, // in 30 secs

        /* Android Only Properties */
        ticker: 'My Notification Ticker', // (optional)
        autoCancel: true, // (optional) default: true
        largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
        smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
        bigText: message, // (optional) default: "message" prop
        vibrate: true, // (optional) default: true
        vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000       
        groupSummary: false, // (optional) set this notification to be the group summary for a group of notifications, default: false
        ongoing: false, // (optional) set whether this is an "ongoing" notification
        invokeApp: false, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true
        when: null, // (optionnal) Add a timestamp pertaining to the notification (usually the time the event occurred). For apps targeting Build.VERSION_CODES.N and above, this time is not shown anymore by default and must be opted into by using `showWhen`, default: null.
        usesChronometer: false, // (optional) Show the `when` field as a stopwatch. Instead of presenting `when` as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call), default: false.
        timeoutAfter: null, // (optional) Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled, default: null
        //actions: ['Yes', 'No'], // (Android only) See the doc for notification actions to know more
        //tag: 'some_tag', // (optional) add tag to message
        //group: 'group', // (optional) add group to message
        //subText: 'This is a subText', // (optional) default: none
        //color: 'blue', // (optional) default: system default
        //channelId: soundName ? 'sound-channel-id' : 'default-channel-id',

        /* iOS only properties */
        category: '', // (optional) default: empty string

        /* iOS and Android properties */
        title: 'Scheduled Notification', // (optional)
        message: message, // (required)
        userInfo: {sceen: "home"}, // (optional) default: {} (using null throws a JSON value '<null>' error)
        number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
        // playSound: !!soundName, // (optional) default: true
        // soundName: soundName ? soundName : 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
        // id: this.lastId, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    });
    console.log('notification for ' + timeToNotifi.toString() + 'sucssfuly')
}
export default function Notifications() {
    PushNotification.removeAllDeliveredNotifications();     //clear notification center
    PushNotification.cancelAllLocalNotifications();         //remove all exisiting notifications
    let time = [];
    time[0] = new Date(Date.now() + (7 * 1000));          //time of 7 days from now
    time[1] = new Date(Date.now() + (10 * 24 * 60 * 60 * 1000));         //time of 10 days from now
    time[2] = new Date(Date.now() + (14 * 24 * 60 * 60 * 1000));          //time of 14 days from now
    time[3] = new Date(Date.now() + (21 * 24 * 60 * 60 * 1000));         //time of 21 days from now
    time[4] = new Date(Date.now() + (35 * 24 * 60 * 60 * 1000));          //time of 35 days from now
    let message = ['new submission is avilable',
        'have you forgot to sumbmit?',
        'you have been missing a week now, please come back to submit',
        'you can still make progress if you enter now',
        'you havent been here for over a month. please come back and take a picture']
    for (let i = 0; i < time.length; i++) {
        createNotification(time[i], message[i]);
    }
} 